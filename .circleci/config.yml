version: 2.1

workflows:
  main:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master


jobs:
  build:
    environment:
      RAILS_ENV: test
      ALGOLIASEARCH_API_KEY: blah
      ALGOLIASEARCH_APPLICATION_ID: blah
      ALGOLIASEARCH_SEARCH_ONLY_KEY: blah
      DATABASE_URL: "postgres://postgres@localhost:5432/travis_ci_test"
    docker:
      - image: circleci/ruby:2.5.3-node-browsers
      - image: circleci/postgres:9.6
    steps:
      - checkout
      - run:
          name: "Install Commands"
          command: |
            bundle install --path vendor/bundle
            bundle exec chromedriver-update
            yarn install
            curl -o ./cc-test-reporter -sSL https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
            chmod +x ./cc-test-reporter
            sudo apt-get install -y postgresql-client
      - run:
          name: "Prepare Database"
          command: |
            cp config/database.yml.travis config/database.yml
            psql -c 'create database travis_ci_test;' -U postgres -h localhost -p 5432
      - run:
          name: "Run & Test"
          command: |
            bundle exec rails webpacker:compile
            bundle exec rake db:schema:load
            ./cc-test-reporter before-build
            bundle exec rspec spec
            ./cc-test-reporter format-coverage -t simplecov -o coverage/codeclimate.simplecov.json
            yarn test
            ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.lcov.json
            ./cc-test-reporter sum-coverage coverage/codeclimate.*.json
            ./cc-test-reporter upload-coverage
            bundle exec bundle-audit check --update
      - persist_to_workspace:
          root: src
          paths:
            - public

  deploy:
    docker:
      - image: cibuilds/hugo:0.49.2
    steps:
      - attach_workspace:
          at: src
      - add_ssh_keys
      - run: echo "deploy"

# Missing:
# chacing for bundle
# caching for node
# chaching for ruby (bundle)
# deploy to heroku
# slack notification
# CC_TEST_REPORTER_ID variable
# HEROKU envar
# airbrake envars
